package interview;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

/**
 * 随机减法
 * <p>
 * 360安卓笔试题
 * 题目描述：
 * 给定一个数a0，定义如下随机序列a1,a2,...an。
 * <p>
 * 1、从闭区间[0,a0]中等概率随机选出一个整数k0，令a1=a0-k0。
 * <p>
 * 2、得到随机数a1之后，再从闭区间[0,a1]中等概率随机选出一个整数k1，再令 a2=a1-k1。
 * <p>
 * 3、一般地，得到随机数ai之后，再从闭区间[0,ai]中等概率随机选出一个整数ki，令ai+1=ai-ki。
 * <p>
 * 问an=0的概率是多少?
 * <p>
 * 输入
 * 输入两个整数n,a0(1≤n,a0≤100)。
 * <p>
 * 输出
 * 输出概率，小数点后四舍五入保留5位小数。
 * <p>
 * <p>
 * 样例输入
 * 3 3
 * 样例输出
 * 0.72049
 * <p>
 * 提示
 * 输入样例2
 * 1 3
 * 输出样例2
 * 0.25000
 * <p>
 * 输入样例3
 * 100 3
 * 输出样例3
 * 1.00000
 */
public class Main8 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int n = sc.nextInt();
            int a0 = sc.nextInt();
            getResult(n, a0);
        }
    }

    /**
     * 思路：
     * 一，n = 1, ao = 3
     * 选一次的情况：
     * 1.[0,3]->选3->[0,0]   p1 = 1/4
     * <p>
     * p = p1
     * <p>
     * 二，n = 2, a0 = 3
     * 选两次k的情况
     * 1.[0,3]->选0->[0,3]->选3->[0,0]    p1 = 1/4 * 1/4
     * 2.[0,3]->选1->[0,2]->选2->[0,0]    p2 = 1/4 * 1/3
     * 3.[0,3]->选2->[0,1]->选1->[0,0]    p3 = 1/4 * 1/2
     * 4.[0,3]->选3->[0,0]->选0->[0,0]    p4 = 1/4 * 1/1
     * <p>
     * p = p1 + p2 + p3 + p4
     * <p>
     * 三，n = 3, a0 = 3
     * 选三次k的情况
     * 1.[0,3]->选0->[0,3]->选0->[0,3]->选3->[0,0]    p1 = 1/4 * 1/4 * 1/4
     * 2.[0,3]->选0->[0,3]->选1->[0,2]->选2->[0,0]    p2 = 1/4 * 1/4 * 1/3
     * 3.[0,3]->选0->[0,3]->选2->[0,1]->选1->[0,0]    p3 = 1/4 * 1/4 * 1/2
     * 4.[0,3]->选0->[0,3]->选3->[0,0]->选0->[0,0]    p4 = 1/4 * 1/4 * 1/1
     * 5.[0,3]->选1->[0,2]->选0->[0,2]->选2->[0,0]    p5 = 1/4 * 1/3 * 1/3
     * 6.[0,3]->选1->[0,2]->选1->[0,1]->选1->[0,0]    p6 = 1/4 * 1/3 * 1/2
     * 7.[0,3]->选1->[0,2]->选2->[0,0]->选0->[0,0]    p7 = 1/4 * 1/3 * 1/1
     * 8.[0,3]->选2->[0,1]->选0->[0,1]->选1->[0,0]    p8 = 1/4 * 1/2 * 1/2
     * 9.[0,3]->选2->[0,1]->选1->[0,0]->选0->[0,0]    p9 = 1/4 * 1/2 * 1/1
     * 10.[0,3]->选3->[0,0]->选0->[0,0]->选0->[0,0]    p10 = 1/4 * 1/1 * 1/1
     * <p>
     * p = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10
     * <p>
     * .....依此类推......
     */
    public static double getResult(int n, int a0) {
        double[][] dp = new double[n + 1][a0 + 1];
        dp[0][a0] = 1;
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= a0; j++) {
                for (int k = j; k <= a0; k++) {
                    dp[i][j] += dp[i - 1][k] * 1.0 / (double) (k + 1);
                }
            }
        }
        for (int i = 0; i < dp.length; i++) {
            System.out.println(Arrays.toString(dp[i]));
        }

        System.out.printf("%.5f\n", dp[n][0]);
        return dp[n][0];
    }
}
